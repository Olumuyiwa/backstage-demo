services:
  postgres:
    image: postgres:15
    container_name: backstage-db
    restart: always
    environment:
      POSTGRES_USER: backstage
      POSTGRES_PASSWORD: backstage
      POSTGRES_DB: ${POSTGRES_DOCKER_DB}
    ports:
      - "${POSTGRES_DOCKER_PORT}:${POSTGRES_DOCKER_PORT}"  # Expose PostgreSQL on port 5432 
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "backstage", "-d", "postgres"]
      interval: 5s
      retries: 5
      start_period: 30s
      timeout: 10s

  backstage:
    build:
      context: .
      dockerfile: packages/backend/Dockerfile
    container_name: backstage-app
    restart: always
    depends_on:
      postgres:
        condition: service_healthy  # Wait for PostgreSQL to be healthy before starting
    environment:
      PORT: ${BACKSTAGE_DOCKER_APP_PORT}
      BACKSTAGE_BASE_URL: http://localhost:${BACKSTAGE_DOCKER_APP_PORT}
      POSTGRES_HOST: backstage-db
      POSTGRES_PORT: ${POSTGRES_DOCKER_PORT}
      POSTGRES_USER: backstage
      POSTGRES_PASSWORD: backstage
      POSTGRES_DB: ${POSTGRES_DOCKER_DB}
    ports:
      - "${BACKSTAGE_DOCKER_APP_PORT}:${BACKSTAGE_DOCKER_APP_PORT}"  # Expose the app on the port defined in .env

volumes:
  postgres_data:
