# torun this file use the command `yarn build-image` in the root directory of the project in the terminal
# FROM node:20-bullseye-slim

# # Install necessary dependencies for native modules
# RUN apt-get update && apt-get install -y \
#     python3 g++ make build-essential libsqlite3-dev ca-certificates curl && \
#     rm -rf /var/lib/apt/lists/*

# # Set environment variables to fix SSL errors
# ENV NODE_OPTIONS="--openssl-legacy-provider"
# ENV NODE_EXTRA_CA_CERTS=/etc/ssl/certs/ca-certificates.crt

# # Disable strict SSL
# RUN npm config set strict-ssl false
# RUN npm config set cafile /etc/ssl/certs/ca-certificates.crt

# # Pre-download Node.js headers to prevent SSL failures
# RUN curl -fsSL "https://nodejs.org/download/release/v20.19.0/node-v20.19.0-headers.tar.gz" -o /tmp/node-headers.tar.gz

# WORKDIR /app

# # Copy dependencies files first
# COPY package.json yarn.lock ./

# RUN if ! command -v yarn &> /dev/null; then \
#       npm install -g yarn --force; \
#     fi



# # Install dependencies
# RUN yarn install --frozen-lockfile --network-timeout 300000 || yarn install --network-timeout 300000

# # Copy remaining files
# COPY . .

# # Expose Backstage default port
# EXPOSE 7007

# # Start Backstage
# CMD ["yarn", "dev"]
